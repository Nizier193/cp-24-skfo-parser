url: https://www.rustore.ru/help/developers/publishing-and-verifying-apps/app-publication/upload-aab
title: Публикация и проверка приложений Публикация приложений Загрузка приложений в формате ААВ

[

  * [](/help/)
  * [Публикация и проверка приложений](/help/developers/publishing-and-verifying-apps/)
  * [Публикация приложений](/help/developers/publishing-and-verifying-apps/app-publication/)
  * Загрузка приложений в формате ААВ

Содержание этой страницы

# Руководство по загрузке приложений в формате ААВ в RuStore Консоль

В RuStore Консоль доступна загрузка файлов в формате ААВ (Android App Bundle).
Этот формат помогает уменьшить размер файла, который пользователь скачивает из
RuStore, и ускорить установку приложения.

Чтобы загрузить в RuStore Консоль версию приложения в формате ААВ:

  1. Загрузите подпись приложения.
  2. Загрузите файл ААВ.

![img](https://www.rustore.ru//help/assets/images/upload_version_aab-98d4fd3ffe50b2787f12c21224600abd.webp)

## Загрузка подписи приложения​

Все APK-файлы подписываются ключом подписи приложения. После этого их можно
загружать в магазины приложений и передавать пользователям.

С файлами AAB процедура подписи отличается:

  * Разработчик подписывает файл AAB ключом загрузки и загружает сборку в RuStore.
  * RuStore подтверждает личность разработчика с помощью сертификата ключа загрузки. Если проверка пройдена, RuStore формирует набор APK-файлов из AAB-файла и подписывает каждый APK ключом подписи приложения.
  * Пользователи загружают из RuStore подписанные APK-файлы.

Таким образом, вместе с файлом AAB вам необходимо загрузить в RuStore Консоль
сертификат ключа загрузки и подпись приложения.

  1. В [RuStore Консоль](https://console.rustore.ru/sign-in) откройте вкладку «Приложения», выберите или добавьте новое приложение, а затем нажмите «Загрузить версию».

  2. Нажмите «Загрузить» напротив предупреждения «Подпись не загружена».

Откроется окно «Загрузка подписи приложения».

![img](https://www.rustore.ru//help/assets/images/aab4-e475489333e9288fa136e96b43d556ba.webp)

  3. Загрузите ZIP-архив с подписью приложения и сертификат ключа загрузки в формате PEM. Подготовить эти файлы вы можете любым подходящим способом:

     * Способ 1: Загрузка существующей подписи.
     * Способ 2: Создание новой подписи.

примечание

Для подготовки файлов подписи нужно устанавливать Java, запускать команды в
терминале, а также использовать хранилище ключей вашего приложения (keystore).

Если вы загружаете файлы в RuStore Консоль, но не занимаетесь их подготовкой,
рекомендуем запросить файлы подписи у разработчиков приложения.

### Способ 1: Загрузка существующей подписи​

Используйте этот способ, если вы уже работали с форматом AAB и у вас есть
сертификат ключа загрузки в формате PEM. Если же вы загружаете файл AAB
впервые и у вас нет ключа, используйте другой способ — создание новой подписи.

предупреждение

На вашем компьютере должна быть [установлена Java](https://jdk.java.net/22/)
версии 11 или выше.

  1. Скачайте PEPK из окна «Загрузка подписи приложения» и переместите `pepk.jar` в каталог `С:\Users\user` или `/Users/user`.

  2. Скопируйте команду для запуска PEPK из блока «Запустите инструмент с помощью команды». В ней уже есть ваш уникальный `encryptionkey`, его оставьте без изменений.

![img](https://www.rustore.ru//help/assets/images/aab5-21d09968d6d14ed694cc0aeb48ef8694.webp)

Замените аргументы:

     * `ваше_хранилище_ключей` — название хранилища ключей, в котором хранятся ключи подписи для вашего приложения. Например, `С:\Users\user\keys\keystore` или `/Users/user/keys/keystore`.

примечание

       * Название хранилища ключей и путь до него можно уточнить в Android Studio: **Build** — **Generate Signed Bundle/APK** — **Android App Bundle** — поле **Key Store Path**.

       * Ваше хранилище ключей может быть в формате `.jks`. В этом случае импортируйте его содержимое в новое хранилище в формате `.keystore`. Формат команды следующий:
            
                        keytool -importkeystore -srckeystore ваше_хранилище_ключей.jks -destkeystore новое_хранилище_ключей.keystore -srcstorepass пароль_от_jks -deststorepass пароль_от_keystore  
            

В Windows перед использованием утилиты `keytool` предварительно перейдите в
каталог `bin` установленной Java. Ваш путь и версия Java могут отличаться:

            
                        cd "C:\Program Files (x86)\Java\jre1.8.0_201\bin"  
            

     * `имя_ключа` — название ключа подписи приложения, например `sign`.

     * `новый_путь_для_созданного_сертификата/` — каталог, в котором нужно разместить создаваемый ZIP-архив с подписью приложения. Например, `С:\Users\user\keys\` или `/Users/user/keys/`.

Пример команды с изменёнными аргументами:

     * Windows
     * macOS
    
        java -jar pepk.jar --keystore С:\Users\user\keys\keystore.keystore --alias sign --output С:\Users\user\keys\pepk_out.zip --encryptionkey=00000...  --include-cert  
    
    
        java -jar pepk.jar --keystore /Users/user/keys/keystore.keystore --alias sign --output /Users/user/keys/pepk_out.zip --encryptionkey=00000...  --include-cert  
    

  3. Получите ZIP-архив с подписью приложения, запустив в терминале команду из предыдущего шага.

Когда терминал запросит пароль для хранилища ключей, введите его и нажмите
Enter. Затем аналогично укажите пароль для ключа.

предупреждение

Файл `pepk.jar` должен находиться в том же каталоге, из которого вы запускаете
команду.

  4. Получите сертиф икат ключа загрузки, которым вы подписывали приложение в формате AAB.

a. (Для Windows) Перед использованием утилиты `keytool` предварительно
перейдите в каталог `bin` установленной Java. Ваш путь и версия Java могут
отличаться:

    
        cd "C:\Program Files (x86)\Java\jre1.8.0_201\bin"  
    

b. Экспортируйте сертификат открытого ключа загрузки из вашего хранилища
ключей в PEM-файл:

    
        keytool -exportcert -alias ключ_загрузки -keystore ваше_хранилище_ключей.keystore -rfc -file сертификат_загрузки.pem  
    

     * `ключ_загрузки` — название ключа загрузки, которым вы подписывали приложение в формате AAB.
     * `ваше_хранилище_ключей` — название хранилища ключей, которое вы использовали ранее.
     * `сертификат_загрузки` — название сертификата ключа загрузки, который создает команда. Например, `С:\Users\user\keys\uploadcert` или `/Users/user/keys/uploadcert`.
  5. Загрузите в RuStore Консоль:

     * ZIP-архив с подписью приложения. Он размещается в каталоге, который вы указали на 2 шаге в параметре `--output`.
     * Сертификат ключа загрузки в формате PEM, которым подписан файл приложения в формате AAB. Он размещается в каталоге, который вы указали на 4 шаге в параметре `-file`.
  6. Завершите загрузку подписи, нажав «Отправить подпись».

предупреждение

  * Подпишите приложение в формате AAB созданным ключом загрузки перед тем, как загружать его в RuStore.
  * Убедитесь, что в архиве `pepk_out.zip` загружена подпись, которой вы подписывали приложение в формате APK ранее.

Далее загрузите файл ААВ приложения.

### Способ 2: Создание и загрузка новой подписи​

Используйте этот способ, если вы впервые работаете с форматом AAB и ключа
загрузки у вас пока нет. Если же у вас уже есть ключ загрузки, используйте
другой спос об — загрузка существующей подписи.

предупреждение

На вашем компьютере должна быть [установлена Java](https://jdk.java.net/22/)
версии 11 или выше.

  1. Сгенерируйте новую пару ключей подписи. Это можно сделать в Android Studio (**Build** — **Generate Signed Bundle/APK** — **Android App Bundle**) или в терминале:

a. (Для Windows) Перед использованием утилиты `keytool` предварительно
перейдите в каталог `bin` установленной Java. Ваш путь и версия Java могут
отличаться:

    
        cd "C:\Program Files (x86)\Java\jre1.8.0_201\bin"  
    

b. Запустите генерацию подписи командой:

    
        keytool -keystore ваше_хранилище_ключей.keystore -genkey -alias имя_ключа -keyalg RSA -validity 36500  
    

     * `ваше_хранилище_ключей` — название хранилища ключей. Например, `С:\Users\user\keys\keystore` или `/Users/user/keys/keystore`.
     * `и мя_ключа` — название ключа подписи приложения, например `sign`.

с. Введите пароль для хранилища ключей, параметры владельца (имя, департамент,
организация, город, страна — часть можно пропустить) и пароль для ключа
подписи.

предупреждение

Сохраните пароли. Их нужно будет вводить каждый раз при работе с хранилищем
ключей и ключом подписи.

  2. Скачайте PEPK из окна «Загрузка подписи приложения» и переместите `pepk.jar` в каталог `С:\Users\user` или `/Users/user`.

  3. Скопируйте команду для запуска PEPK из блока «Запустите инструмент с помощью команды». В ней уже есть ваш уникальный `encryptionkey`, его оставьте без изменений.

![img](https://www.rustore.ru//help/assets/images/aab5-21d09968d6d14ed694cc0aeb48ef8694.webp)

Замените аргументы:

     * `ваше_хранилище_ключей` — название хранилища клю чей, которое вы указали ранее.
     * `имя_ключа` — название ключа подписи приложения, которое вы указали ранее.
     * `новый_путь_для_созданного_сертификата/` — каталог, в котором нужно разместить создаваемый ZIP-архив с подписью приложения. Например `С:\Users\user\keys\` или `/Users/user/keys/`.

Пример команды с изменёнными аргументами:

     * Windows
     * macOS
    
        java -jar pepk.jar --keystore С:\Users\user\keys\keystore.keystore --alias sign --output С:\Users\user\keys\pepk_out.zip --encryptionkey=00000...  --include-cert  
    
    
        java -jar pepk.jar --keystore /Users/user/keys/keystore.keystore --alias sign --output /Users/user/keys/pepk_out.zip --encryptionkey=00000...  --include-cert  
    

  4. Получите ZIP-архив с подписью приложения, выполнив команду из предыдущего шага.

Когда терминал запросит пароль для хранилища ключей, введите его и нажмите
Enter. Затем аналогично укажите пароль для ключа.

предупреждение

Файл `pepk.jar` должен находиться в том же каталоге, из которого вы запускаете
команду.

  5. Сгенерируйте ключ загрузки, которым вы подпишите приложение в формате AAB:
    
        keytool -keystore ваше_хранилище_ключей.keystore -genkey -alias ключ_загрузки -keyalg RSA -validity 36500  
    

     * `ваше_хранилище_ключей` — название хранилища ключей, которое вы указали ранее.
     * `ключ_загрузки` — название ключа загрузки. Например, `upload`.
  6. Получите сертификат ключа загрузки в формате PEM:
    
        keytool -exportcert -alias ключ_загрузки -keystore ваше_хранилище_ключей.keystore -rfc -file сертификат_загрузки.pem  
    

     * `ключ_загрузки` — название ключа загрузки. Оно должно совпадать с названием, которое вы указали на предыдущем шаге.
     * `ваше_хранилище_ключей` — название хранилища ключей, которое вы указали ранее.
     * `сертификат_загрузки` — название сертификата ключа загрузки, который создает команда. Например, `С:\Users\user\keys\uploadcert` или `/Users/user/keys/uploadcert`.
  7. Загрузите в RuStore Консоль:

     * ZIP-архив с подписью приложения. Он размещается в каталоге, который вы указали на 3 шаге в параметре `--output`.
     * Сертификат ключа загрузки в формате PEM. Он размещается в каталоге, который вы указали на 6 шаге в параметре `-file`.
  8. Завершите загрузку подписи, нажав «Отправить подпись».

предупреждение

Подпишите приложение в формате AAB созданным ключом загрузки перед тем, как
загружать его в RuStore.

Далее загрузите файл ААВ приложения.

## Загрузка файла ААВ​

Чтобы загрузить файл AAB в RuStore Консоль:

  1. Убедитесь, что:

     * Подписи приложения загружены.
     * Размер файла AAB — не более 500 MB.
     * Имя файла AAB уникально.
     * Сборка проверена и настроена.
  2. Нажмите «Выберите файл» на [странице загрузки новой версии](/help/developers/publishing-and-verifying-apps/app-publication/upload-aab) приложения.

  3. Выберите файл AAB и дождитесь загрузки приложения.

  4. Заполните остальные параметры приложения и отправьте его на модерацию.

]

